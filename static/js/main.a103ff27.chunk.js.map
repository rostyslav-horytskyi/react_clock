{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timerID","setInterval","setState","prevProps","name","props","console","log","clearInterval","toLocaleTimeString","React","Component","App","isClockVisible","clockName","showClock","hideClock","setRandomNumber","Math","floor","random","className","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"uMAKaA,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,EAAKC,SAAS,CACZL,KAAM,IAAIC,SAEX,OAVP,gCAaE,SAAmBK,GACbA,EAAUC,OAASL,KAAKM,MAAMD,MAIlCE,QAAQC,IAAI,qCAA8BJ,EAAUC,MAAxC,aACFL,KAAKM,MAAMD,SAnBzB,kCAsBE,WACEI,cAAcT,KAAKC,WAvBvB,oBA0BE,WAAU,IACAH,EAASE,KAAKH,MAAdC,KAIR,OAFAS,QAAQC,IAAIV,EAAKY,sBAGf,2BACGV,KAAKH,MAAMC,KAAKY,0BAjCzB,GAA2BC,IAAMC,YC6DlBC,E,4MA5DbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKb,SAAS,CAAEW,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKd,SAAS,CAAEW,gBAAgB,K,EAGlCI,gBAAkB,WAChB,EAAKf,SAAS,CACZY,UAAWI,KAAKC,MAAsB,GAAhBD,KAAKE,a,4CAI/B,WAAU,IAAD,EAC+BrB,KAAKH,MAAnCiB,EADD,EACCA,eAAgBC,EADjB,EACiBA,UAExB,OACE,oCACE,yBAAKO,UAAU,OACb,2CACA,yBAAKA,UAAU,SACZR,EAAiB,kBAAC,EAAD,CAAOT,KAAMU,IAAgB,MAEjD,yBAAKO,UAAU,eAEb,4BACEC,KAAK,SACLC,QAASxB,KAAKgB,UACdS,SAAUX,GAHZ,cAQA,4BACES,KAAK,SACLC,QAASxB,KAAKiB,UACdQ,UAAWX,GAHb,cAQA,4BACES,KAAK,SACLC,QAASxB,KAAKkB,iBAFhB,0B,GAhDMP,IAAMC,WCDxBc,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.a103ff27.chunk.js","sourcesContent":["/* eslint-disable no-console */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => {\n      this.setState({\n        date: new Date(),\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name === this.props.name) {\n      return;\n    }\n\n    console.log(`The Clock was renamed from ${prevProps.name}`\n      + `to ${this.props.name}`);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    console.log(date.toLocaleTimeString());\n\n    return (\n      <p>\n        {this.state.date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: 0,\n  }\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  setRandomNumber = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 10),\n    });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1>React clock</h1>\n          <div className=\"clock\">\n            {isClockVisible ? <Clock name={clockName} /> : null}\n          </div>\n          <div className=\"show_button\">\n\n            <button\n              type=\"button\"\n              onClick={this.showClock}\n              disabled={isClockVisible}\n            >\n              Show Clock\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.hideClock}\n              disabled={!isClockVisible}\n            >\n              Hide Clock\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.setRandomNumber}\n            >\n              Set random name\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}